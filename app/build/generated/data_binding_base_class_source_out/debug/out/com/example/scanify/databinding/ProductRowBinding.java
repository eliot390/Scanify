// Generated by view binder compiler. Do not edit!
package com.example.scanify.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.scanify.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ProductRowBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnSave;

  @NonNull
  public final ConstraintLayout layout2;

  @NonNull
  public final ImageView productImage;

  @NonNull
  public final TextView productTitle;

  @NonNull
  public final TextView storeName;

  @NonNull
  public final TextView storePrice;

  @NonNull
  public final TextView storeUrl;

  private ProductRowBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnSave,
      @NonNull ConstraintLayout layout2, @NonNull ImageView productImage,
      @NonNull TextView productTitle, @NonNull TextView storeName, @NonNull TextView storePrice,
      @NonNull TextView storeUrl) {
    this.rootView = rootView;
    this.btnSave = btnSave;
    this.layout2 = layout2;
    this.productImage = productImage;
    this.productTitle = productTitle;
    this.storeName = storeName;
    this.storePrice = storePrice;
    this.storeUrl = storeUrl;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ProductRowBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ProductRowBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.product_row, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ProductRowBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSave;
      Button btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      ConstraintLayout layout2 = (ConstraintLayout) rootView;

      id = R.id.product_image;
      ImageView productImage = ViewBindings.findChildViewById(rootView, id);
      if (productImage == null) {
        break missingId;
      }

      id = R.id.product_title;
      TextView productTitle = ViewBindings.findChildViewById(rootView, id);
      if (productTitle == null) {
        break missingId;
      }

      id = R.id.store_name;
      TextView storeName = ViewBindings.findChildViewById(rootView, id);
      if (storeName == null) {
        break missingId;
      }

      id = R.id.store_price;
      TextView storePrice = ViewBindings.findChildViewById(rootView, id);
      if (storePrice == null) {
        break missingId;
      }

      id = R.id.store_url;
      TextView storeUrl = ViewBindings.findChildViewById(rootView, id);
      if (storeUrl == null) {
        break missingId;
      }

      return new ProductRowBinding((ConstraintLayout) rootView, btnSave, layout2, productImage,
          productTitle, storeName, storePrice, storeUrl);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
